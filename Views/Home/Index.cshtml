@model IEnumerable<Car>
@using CarRental3._0.Data
@{
    ViewData["Title"] = "Home Page";
}

<section class="hero-section">
    <div class="container">
        <div class="hero-content">
            <h1>Наемете Перфектната Кола за Вашето Пътуване</h1>
            <h2>Разгледайте нашата широка гама от автомобили на ненадминати цени.</h2>
            <div class="hero-buttons">
                <a href="/Car/Index" class="btn btn-primary">Наеми сега</a>
                <a href="/About" class="btn btn-secondary">Научи повече</a>
            </div>
        </div>
    </div>
</section>

<section class="featured-cars">
    <!-- DEBUG: Add this temporary code -->
    <div style="background: yellow; padding: 10px; margin-bottom: 20px;">
        <h3>Debug Info:</h3>
        <p>Model is null: @(Model == null)</p>
        <p>Model has items: @(Model?.Any() ?? false)</p>
        @if (Model != null && Model.Any())
        {
            <p>First car: @Model.First().Brand @Model.First().Model</p>
        }
    </div>
    <!-- End debug code -->
    <div class="container">
        <h2>Препоръчани Автомобили</h2>
        <div class="simple-carousel">
            @if (Model != null && Model.Any())
            {
                foreach (var car in Model)
                {
                    <div class="car-card">
                        <img src="@car.Image" alt="@car.Brand @car.Model" onerror="this.src='https://via.placeholder.com/300x200?text=Car+Image'">
                        <h3>@car.Brand @car.Model</h3>
                        <p>@car.DailyRate лв./ден</p>
                        <a href="/Car/Detail/@car.CarId" class="btn btn-primary">Наеми</a>
                    </div>
                }
            }
            else
            {
                <p class="no-cars">В момента няма налични автомобили.</p>
            }
        </div>
    </div>
</section>

<section class="why-choose-us">
    <div class="container">
        <h2>Защо да изберете нас?</h2>
        <div class="benefits-grid">
            <div class="benefit-card">
                <i class="fas fa-tag"></i>
                <h3>Достъпни Цени</h3>
                <p>Получете най-добрите оферти за коли под наем.</p>
            </div>
            <div class="benefit-card">
                <i class="fas fa-car"></i>
                <h3>Голям Избор</h3>
                <p>Изберете от разнообразие от автомобили.</p>
            </div>
            <div class="benefit-card">
                <i class="fas fa-headset"></i>
                <h3>24/7 Поддръжка</h3>
                <p>Винаги сме на разположение да ви помогнем.</p>
            </div>
        </div>
    </div>
</section>

<section class="reviews-section">
    <div class="container">
        <h2>Какво казват нашите клиенти</h2>
        <div class="reviews-container">
            <div id="topReviews"></div>

            @if (User.Identity.IsAuthenticated)
            {
                <div class="review-form">
                    <h3>Оставете отзив</h3>
                    <form id="reviewForm">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label>Оценка:</label>
                            <div class="star-rating">
                                <input type="radio" id="5-stars" name="Rating" value="5" checked />
                                <label for="5-stars" class="star">★</label>
                                <input type="radio" id="4-stars" name="Rating" value="4" />
                                <label for="4-stars" class="star">★</label>
                                <input type="radio" id="3-stars" name="Rating" value="3" />
                                <label for="3-stars" class="star">★</label>
                                <input type="radio" id="2-stars" name="Rating" value="2" />
                                <label for="2-stars" class="star">★</label>
                                <input type="radio" id="1-star" name="Rating" value="1" />
                                <label for="1-star" class="star">★</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <textarea name="Comment" class="form-control" placeholder="Вашият отзив..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Прати</button>
                    </form>
                    <div id="reviewSuccess" class="alert alert-success mt-3" style="display:none;"></div>
                </div>
            }
            else
            {
                <p>Моля <a href="/Account/Login">впишете се</a> за да оставите отзив.</p>
            }
        </div>
        <footer class="footer">
            <div class="container">
                <div class="footer-links">
                    <a href="/">Home</a>
                    <a href="/Home/About">About</a>
                    <a href="/Contact">Contact</a>
                    <a href="/Privacy">Privacy Policy</a>
                </div>
                <div class="social-media">
                    <a href="#"><i class="fab fa-facebook"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                </div>
                <div class="contact-info">
                    <p>123 Car Rental Street, Sofia, Bulgaria</p>
                    <p>Phone: +359 123 456 789</p>
                    <p>Email: info@carrental.com</p>
                </div>
            </div>
        </footer>
    </div>
</section>

@section Styles {
    <style>
        /* Hero Section */
        .hero-section {
            background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('https://images.unsplash.com/photo-1486262715619-67b85e0b08d3?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-position: center;
            color: white;
            padding: 100px 0;
            text-align: center;
        }

        .hero-content h1 {
            font-size: 2.5rem;
            margin-bottom: 20px;
        }

        .hero-content h2 {
            font-size: 1.5rem;
            margin-bottom: 30px;
            font-weight: 300;
        }

        .hero-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        /* Featured Cars */
        .simple-carousel {
            display: flex;
            overflow-x: auto;
            gap: 20px;
            padding: 20px 0;
            scroll-snap-type: x mandatory;
            -webkit-overflow-scrolling: touch; /* For smooth scrolling on iOS */
        }

        .car-card {
            flex: 0 0 300px;
            scroll-snap-align: start;
            background: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .no-cars {
            text-align: center;
            width: 100%;
            padding: 40px 0;
            font-size: 1.2rem;
            color: #666;
        }
        .featured-cars {
            padding: 60px 0;
            background: #f8f9fa;
        }

        .carousel-container {
            position: relative;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 40px;
            overflow: hidden;
        }

        .carousel-track {
            display: flex;
            gap: 20px;
            padding: 20px 0;
            transition: transform 0.5s ease;
        }

        .carousel-item {
            flex: 0 0 300px;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transition: transform 0.3s;
            border: 3px solid red !important; /* Makes items clearly visible */
        }
            .carousel-item:hover {
                transform: translateY(-5px);
            }

            .carousel-item img {
                width: 100%;
                height: 180px;
                object-fit: cover;
            }

            .carousel-item h3 {
                padding: 15px 15px 5px;
                margin: 0;
            }

            .carousel-item p {
                padding: 0 15px;
                color: #333;
                font-weight: bold;
            }

            .carousel-item a {
                display: block;
                margin: 15px;
            }

        .carousel-prev, .carousel-next {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(0,0,0,0.5);
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            font-size: 20px;
            cursor: pointer;
            z-index: 1;
            transition: background 0.3s;
        }

            .carousel-prev:hover, .carousel-next:hover {
                background: rgba(0,0,0,0.8);
            }

        .carousel-prev {
            left: 0;
        }

        .carousel-next {
            right: 0;
        }

        .carousel-track p {
            text-align: center;
            width: 100%;
            padding: 40px 0;
            font-size: 1.2rem;
            color: #666;
        }

        /* Why Choose Us */
        .why-choose-us {
            padding: 60px 0;
            text-align: center;
        }

        .benefits-grid {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 30px;
            margin-top: 30px;
        }

        .benefit-card {
            flex: 1;
            min-width: 250px;
            max-width: 350px;
            padding: 30px 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

            .benefit-card i {
                font-size: 2.5rem;
                color: #0d6efd;
                margin-bottom: 15px;
            }

        /* Reviews Section */
        .reviews-section {
            padding: 60px 0;
            background: #f8f9fa;
        }

        .reviews-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .review-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .review-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .user-info {
            display: flex;
            flex-direction: column;
        }

        .user-name {
            font-weight: bold;
        }

        .rating {
            color: #ffc107;
            font-size: 18px;
        }

        .review-date {
            color: #666;
            font-size: 14px;
        }

        .review-content p {
            margin: 0;
        }

        .review-form {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            margin-top: 30px;
        }

        .star-rating {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }

            .star-rating input {
                display: none;
            }

            .star-rating label {
                font-size: 24px;
                color: #ddd;
                cursor: pointer;
                padding: 0 5px;
            }

                .star-rating input:checked ~ label,
                .star-rating label:hover,
                .star-rating label:hover ~ label {
                    color: #ffc107;
                }

        @@media (max-width: 768px) {
            .hero-content h1 {
                font-size: 2rem;
            }

            .hero-content h2 {
                font-size: 1.2rem;
            }

            .carousel-item {
                flex: 0 0 250px;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Carousel functionality
            const carousel = {
                track: document.querySelector('.carousel-track'),
                prevBtn: document.querySelector('.carousel-prev'),
                nextBtn: document.querySelector('.carousel-next'),
                items: document.querySelectorAll('.carousel-item'),
                autoScrollInterval: null,
                isAutoScrolling: true,
                scrollSpeed: 1, // pixels per frame
                direction: -1, // -1 for left, 1 for right

                init: function() {
                    if (this.items.length === 0) {
                        this.prevBtn.style.display = 'none';
                        this.nextBtn.style.display = 'none';
                        return;
                    }

                    // Clone items for infinite scroll
                    this.items.forEach(item => {
                        const clone = item.cloneNode(true);
                        this.track.appendChild(clone);
                    });

                    this.startAutoScroll();
                    this.setupEventListeners();
                },

                startAutoScroll: function() {
                    this.autoScrollInterval = requestAnimationFrame(this.autoScroll.bind(this));
                },

                stopAutoScroll: function() {
                    cancelAnimationFrame(this.autoScrollInterval);
                },

                autoScroll: function() {
                    const firstItem = this.track.firstElementChild;
                    const lastItem = this.track.lastElementChild;
                    const firstItemWidth = firstItem.offsetWidth + 20; // including gap

                    // If we've scrolled past the first original item, reset position
                    if (this.track.scrollLeft <= 0 && this.direction === -1) {
                        this.track.scrollLeft = this.track.scrollWidth / 2 - this.track.offsetWidth;
                    }
                    // If we've scrolled to the end of the cloned items, reset position
                    else if (this.track.scrollLeft >= this.track.scrollWidth / 2 && this.direction === -1) {
                        this.track.scrollLeft = 0;
                    }

                    this.track.scrollLeft += this.direction * this.scrollSpeed;

                    if (this.isAutoScrolling) {
                        this.autoScrollInterval = requestAnimationFrame(this.autoScroll.bind(this));
                    }
                },

                setupEventListeners: function() {
                    // Manual navigation
                    this.prevBtn.addEventListener('click', () => {
                        this.direction = 1;
                        this.scrollSpeed = 5;
                        this.isAutoScrolling = false;
                        this.stopAutoScroll();
                        this.autoScroll();

                        // After manual scroll, return to auto
                        setTimeout(() => {
                            this.direction = -1;
                            this.scrollSpeed = 1;
                            this.isAutoScrolling = true;
                            this.startAutoScroll();
                        }, 1000);
                    });

                    this.nextBtn.addEventListener('click', () => {
                        this.direction = -1;
                        this.scrollSpeed = 5;
                        this.isAutoScrolling = false;
                        this.stopAutoScroll();
                        this.autoScroll();

                        // After manual scroll, return to auto
                        setTimeout(() => {
                            this.direction = -1;
                            this.scrollSpeed = 1;
                            this.isAutoScrolling = true;
                            this.startAutoScroll();
                        }, 1000);
                    });

                    // Pause on hover
                    this.track.addEventListener('mouseenter', () => {
                        this.isAutoScrolling = false;
                        this.stopAutoScroll();
                    });

                    this.track.addEventListener('mouseleave', () => {
                        this.isAutoScrolling = true;
                        this.startAutoScroll();
                    });
                }
            };

            // Initialize carousel
            carousel.init();

            // Review system
            function loadReviews() {
                fetch('/Review/GetTopReviews')
                    .then(response => response.json())
                    .then(reviews => {
                        const container = document.getElementById('topReviews');
                        container.innerHTML = '';

                        reviews.forEach(review => {
                            container.innerHTML += `
                                <div class="review-card">
                                    <div class="review-header">
                                        <div class="user-info">
                                            <span class="user-name">${review.user.fullName}</span>
                                            <div class="rating">
                                                ${'★'.repeat(review.rating)}${'☆'.repeat(5 - review.rating)}
                                            </div>
                                        </div>
                                        <span class="review-date">${new Date(review.createdAt).toLocaleDateString()}</span>
                                    </div>
                                    <div class="review-content">
                                        <p>${review.comment}</p>
                                    </div>
                                </div>
                            `;
                        });
                    });
            }

            document.getElementById('reviewForm')?.addEventListener('submit', async function(e) {
                e.preventDefault();

                const form = e.target;
                const formData = new FormData(form);
                const data = {
                    Comment: formData.get('Comment'),
                    Rating: parseInt(formData.get('Rating'))
                };

                try {
                    const response = await fetch('/Review/Create', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        const result = await response.json();
                        const successDiv = document.getElementById('reviewSuccess');
                        successDiv.textContent = result.message;
                        successDiv.style.display = 'block';
                        form.reset();

                        setTimeout(() => {
                            loadReviews();
                            successDiv.style.display = 'none';
                        }, 2000);
                    } else {
                        const error = await response.json();
                        alert(error.message || 'Грешка при изпращане на отзива');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Възникна грешка при изпращане на отзива');
                }
            });

            // Load reviews on page load
            loadReviews();
        });
    </script>
}