@{
    ViewData["Title"] = "Home Page";
}

<!-- Your existing hero section and other content -->
<!-- Reviews Section -->
<section class="reviews-section">
    <div class="container">
        <h2>Customer Reviews</h2>
        <div class="reviews-container">
            <!-- Top Reviews will be loaded here -->
            <div id="topReviews"></div>

            <!-- Review Form -->
            @if (User.Identity.IsAuthenticated)
            {
                <div class="review-form">
                    <h3>Leave Your Review</h3>
                    <form id="reviewForm">
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label>Rating:</label>
                            <div class="star-rating">
                                <input type="radio" id="5-stars" name="Rating" value="5" checked />
                                <label for="5-stars" class="star">★</label>
                                <input type="radio" id="4-stars" name="Rating" value="4" />
                                <label for="4-stars" class="star">★</label>
                                <input type="radio" id="3-stars" name="Rating" value="3" />
                                <label for="3-stars" class="star">★</label>
                                <input type="radio" id="2-stars" name="Rating" value="2" />
                                <label for="2-stars" class="star">★</label>
                                <input type="radio" id="1-star" name="Rating" value="1" />
                                <label for="1-star" class="star">★</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <textarea name="Comment" class="form-control" placeholder="Your review..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                    <div id="reviewSuccess" class="alert alert-success mt-3" style="display:none;"></div>
                </div>
            }
            else
            {
                <p>Please <a href="/Account/Login">login</a> to leave a review.</p>
            }
        </div>
    </div>
</section>

@section Styles {
    <style>
        .reviews-section {
            padding: 50px 0;
            background: #f8f9fa;
        }

        .reviews-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .review-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .review-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .user-info {
            display: flex;
            flex-direction: column;
        }

        .user-name {
            font-weight: bold;
        }

        .rating {
            color: #ffc107;
            font-size: 18px;
        }

        .review-date {
            color: #666;
            font-size: 14px;
        }

        .review-content p {
            margin: 0;
        }

        .review-form {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            margin-top: 30px;
        }

        .star-rating {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            font-size: 24px;
            color: #ddd;
            cursor: pointer;
            padding: 0 5px;
        }

        .star-rating input:checked ~ label,
        .star-rating label:hover,
        .star-rating label:hover ~ label {
            color: #ffc107;
        }
    </style>
}

@section Scripts {
    <script>
        // Load top reviews
        function loadReviews() {
            fetch('/Review/GetTopReviews')
                .then(response => response.json())
                .then(reviews => {
                    const container = document.getElementById('topReviews');
                    container.innerHTML = '';

                    reviews.forEach(review => {
                        container.innerHTML += `
                            <div class="review-card">
                                <div class="review-header">
                                    <div class="user-info">
                                        <span class="user-name">${review.user.fullName}</span>
                                        <div class="rating">
                                            ${'★'.repeat(review.rating)}${'☆'.repeat(5 - review.rating)}
                                        </div>
                                    </div>
                                    <span class="review-date">${new Date(review.createdAt).toLocaleDateString()}</span>
                                </div>
                                <div class="review-content">
                                    <p>${review.comment}</p>
                                </div>
                            </div>
                        `;
                    });
                });
        }

        // Handle review form submission
        document.getElementById('reviewForm')?.addEventListener('submit', async function(e) {
            e.preventDefault();

            const form = e.target;
            const formData = new FormData(form);
            const data = {
                Comment: formData.get('Comment'),
                Rating: parseInt(formData.get('Rating'))
            };

            try {
                const response = await fetch('/Review/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const result = await response.json();
                    const successDiv = document.getElementById('reviewSuccess');
                    successDiv.textContent = result.message;
                    successDiv.style.display = 'block';
                    form.reset();

                    // Reload reviews after 2 seconds
                    setTimeout(() => {
                        loadReviews();
                        successDiv.style.display = 'none';
                    }, 2000);
                } else {
                    const error = await response.json();
                    alert(error.message || 'Error submitting review');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while submitting your review');
            }
        });

        // Load reviews on page load
        document.addEventListener("DOMContentLoaded", loadReviews);
    </script>
}